4.


#include <stdio.h>
#include <string.h>


void calculate_crc(char *data, char *divisor, char *remainder) {
    int dataLen = strlen(data);
    int divLen = strlen(divisor);
    char temp[100];


    strcpy(temp, data);
    for (int i = 0; i < divLen - 1; i++) {
        strcat(temp, "0");
    }


        for (int i = 0; i < dataLen; i++) {
        if (temp[i] == '1') {
            for (int j = 0; j < divLen; j++) {
                temp[i + j] = (temp[i + j] == divisor[j]) ? '0' : '1';
            }
        }
    }


    // Copy remainder to output
    strcpy(remainder, temp + dataLen);
}


void check_crc(char *receivedData, char *divisor) {
    int dataLen = strlen(receivedData);
    int divLen = strlen(divisor);
    char temp[100];


    
    strcpy(temp, receivedData);
    
    for (int i = 0; i < dataLen - divLen + 1; i++) {
        if (temp[i] == '1') {
            for (int j = 0; j < divLen; j++) {
                temp[i + j] = (temp[i + j] == divisor[j]) ? '0' : '1';
            }
        }
    }


        for (int i = dataLen - divLen + 1; i < dataLen; i++) {
        if (temp[i] == '1') {
            printf("Error detected in received data.\n");
            return;
        }
    }
    
    printf("No error detected in received data.\n");
}


int main() {
    char data[100], divisor[100], remainder[100];


    printf("Sender Side:\n");
    
    printf("Enter data: ");
    scanf("%s", data);


    printf("Enter divisor: ");
    scanf("%s", divisor);


    calculate_crc(data, divisor, remainder);


    strcat(data, remainder);
    
    printf("Transmitted Data (Data + CRC): %s\n", data);


     printf("\nReceiver Side:\n");
    
    char receivedData[100];
    
    printf("Enter received data: ");
    scanf("%s", receivedData);


    check_crc(receivedData, divisor);


    return 0;
}